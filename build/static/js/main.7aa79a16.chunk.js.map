{"version":3,"sources":["config.js","layout/Sidebar/SidebarLayout.js","layout/Dashboard/DashboardLayout.js","services/ajax.js","services/checkRedirect.js","pages/Dashboard/DashboardPage.js","pages/Login/LoginPage.js","pages/Project/AddProject.js","pages/Project/ProjectDetail.js","pages/Project/Deploy.js","pages/Login/RegisterPage.js","index.js","images/logo.png"],"names":["path","dashboard","login","register","setupShop","onGoing","shopItem","auth","projectDetail","deployProject","cart","checkout","orderHistory","viewVendor","viewVolunteer","BASE_URL","color","DEV_MODE","SOCKET_PORT","admin","adminJSON","localStorage","getItem","JSON","parse","e","console","error","username","role","ProfileView","shop","name","className","style","backgroundColor","primary","size","SidebarLayout","logOut","clear","props","hideSidebar","history","replace","window","pushState","location","reload","src","logo","alt","exact","to","onClick","this","Component","Footer","DashboardLayout","state","showSidebar","setState","height","width","points","type","children","href","block","target","React","config","initialToken","axios","defaults","headers","common","checkToken","Promise","resolve","reject","get","then","response","data","success","setItem","token","apiGet","params","cb","err","status","catch","message","warning","logout","setTimeout","apiPost","post","apiPut","put","log","removeItem","getProjects","user","jwt","push","DashboardPage","showDetails","uID","closeViewMode","viewDetail","selectedOrder","_sort","resp","projects","list","columns","title","dataIndex","key","render","text","Date","toDateString","toLocaleTimeString","record","unassignedOrders","statuses","loading","checkRedirect","length","rowKey","pagination","dataSource","visible","onClose","layout","labelCol","span","wrapperCol","tailLayout","offset","LoginPageForm","handleLogin","ev","preventDefault","confirmLoading","form","validateFieldsAndScroll","values","stringify","redirect","resetFields","getFieldDecorator","bordered","onSubmit","Item","label","initialValue","rules","required","Password","shape","htmlType","align","LoginPage","create","AddProjectForm","populateDetails","project","setFieldsValue","chownUser","host","repositoryUrl","deployPath","sshKey","buildCommands","branch","port","handleAddProject","updateProject","owner","id","addProject","updateUser","projectAdded","locations","nextProps","nextContext","oldProject","sm","lg","TextArea","rows","AddProject","ProjectDetail","match","createProject","editProject","viewProject","updated_at","gutter","SocketIOClient","require","handleData","mess","code","audio","play","deploying","deployed","logs","showStatus","projectID","socket","transports","reconnection","upgrade","Audio","on","emit","map","index","phoneRules","pattern","RegisterPageForm","confirmed","email","i","messages","j","k","colon","RegisterPage","PrivateRoute","component","rest","loginToken","App","Deploy","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.7aa79a16.chunk.js","sourcesContent":["export const path = {\n  dashboard: '/',\n  login: '/login',\n  register: '/register',\n  setupShop: '/setup-shop',\n  onGoing: '/on-going',\n  shopItem: '/shop-items',\n  auth: '/auth/:provider/callback',\n  projectDetail: '/project/:uID',\n  deployProject: '/project/:uID/deploy',\n  cart: '/cart',\n  checkout: '/checkout',\n  orderHistory: '/order-history',\n  viewVendor: '/vendors',\n  viewVolunteer: '/volunteers',\n};\n\n// export const basename = '/';\n//\nexport const BASE_URL = process.env.NODE_ENV === 'production'\n  ? 'http://deployer-backend.craffcodes.com'\n  : process.env.NODE_ENV === 'staging' ? 'http://deployer-backend.craffcodes.com' : 'http://localhost:1337';\nexport const APP_URL = process.env.NODE_ENV === 'production'\n  ? 'http://deployer.craffcodes.com'\n  : process.env.NODE_ENV === 'staging' ? 'http://deployer.craffcodes.com' : 'http://localhost:3000';\nexport const SOCKET_PORT = process.env.NODE_ENV === 'production'\n  ? 1342\n  : process.env.NODE_ENV === 'staging' ? 1342 : 1342;\n//\n// export const fileBaseURL = process.env.NODE_ENV === 'production'\n//   ? ''\n//   : '';\n\n\nexport const color = {\n  // primary: '#ffaa00',\n  // accent: '#000000',\n  // success: '#53D769',\n  // danger: '#fC3D39',\n  // disabled: '#cfcfcf'\n};\n\nexport const DEV_MODE = true;\n\nexport default { BASE_URL, path, color, DEV_MODE, SOCKET_PORT };\n","import React, {Component} from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport {Avatar} from \"antd\";\nimport {path, color} from '../../config';\n\nimport logo from '../../images/logo.png';\n\nlet admin = {};\ntry{\n    const adminJSON = localStorage.getItem('user');\n    if(adminJSON){\n        admin = JSON.parse(adminJSON);\n    }\n}catch (e) {\n    console.error(e)\n}\n\nconst { username, role, shop } = admin;\nconst isAdmin = role && role.name === 'Admin';\nconst shopExist = !!shop;\n\nconst ProfileView = () => {\n\n  return (\n    <div className={'profile'}>\n      <div className={'picture'}>\n        <Avatar style={{ color: '#fff', backgroundColor: color.primary }} size={'large'}>\n          {username}\n        </Avatar>\n      </div>\n      <div className={'designation'}>\n        <div className={'name'}>{username}</div>\n        <div className={'role'}>{role.name}</div>\n      </div>\n    </div>\n  )\n};\n\nclass SidebarLayout extends Component{\n\n  logOut = () => {\n    localStorage.clear();\n    this.props.hideSidebar();\n    this.props.history.replace('/login');\n    window.history.pushState({},'Login','/');\n    window.location.reload(true);\n  };\n\n  render() {\n    return (\n      <div className={'sidebar'}>\n        <div className={'side-header'}>\n          <div className={'logo'}>\n            <img src={logo} alt={'Janta Vendor'}/>\n          </div>\n          <ProfileView/>\n        </div>\n        <div className={'side-body'}>\n            <ul>\n                <NavLink exact to={path.dashboard}>\n                    <li onClick={this.props.hideSidebar}>Dashboard</li>\n                </NavLink>\n                {/*<NavLink exact to={path.onGoing}>*/}\n                {/*    <li onClick={this.props.hideSidebar}>On-going Orders</li>*/}\n                {/*</NavLink>*/}\n                {/*<NavLink exact to={path.orderHistory}>*/}\n                {/*    <li onClick={this.props.hideSidebar}>Order History</li>*/}\n                {/*</NavLink>*/}\n                {/*<NavLink exact to={path.shopItem}>*/}\n                {/*    <li onClick={this.props.hideSidebar}>My Shop</li>*/}\n                {/*</NavLink>*/}\n            </ul>\n        </div>\n        <div className={'side-footer'}>\n          <ul>\n            <li onClick={this.logOut}>\n              Log Out\n            </li>\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SidebarLayout;\n","import React from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport { Icon, Layout, Button } from 'antd';\nimport SidebarLayout from \"../Sidebar/SidebarLayout\";\nimport { path } from \"../../config\";\n\nconst { Footer } = Layout;\n\nclass DashboardLayout extends  React.Component{\n\n    constructor(props) {\n        super(props);\n    }\n\n    state = {\n    showSidebar: false\n  };\n\n  hideSidebar = () => {\n    this.setState({\n      showSidebar: false\n    })\n  }\n\n  render() {\n\n    const { showSidebar } = this.state;\n\n    return (\n      <main className={showSidebar ? 'show-sidebar' : ''}>\n        <div className={'sidebar-control'} onClick={() => {\n          this.setState({\n            showSidebar: true\n          })\n        }}>\n          <svg height=\"40\" width=\"40\">\n            <polygon points=\"0,0 0,40 40,0\" className=\"triangle\"/>\n          </svg>\n          <Icon type=\"arrow-right\"/>\n        </div>\n\n        <SidebarLayout {...this.props} hideSidebar={this.hideSidebar}/>\n\n        <div className=\"sidebar-overlay\" onClick={() => {\n          this.setState({\n            showSidebar: false\n          })\n        }}/>\n        <div className={'main-bar'}>\n          {this.props.children}\n        </div>\n\n        <Footer>\n          Developed by\n          <Button type=\"link\" href=\"https://www.craffcodes.com\" block target=\"_blank\">\n            Craffcodes\n          </Button>\n        </Footer>\n      </main>\n    )\n  }\n}\n\nexport default DashboardLayout;\n","import axios from 'axios';\nimport React from \"react\";\nimport { message } from \"antd\";\nimport config from \"./../config\";\nimport {getLocation} from \"less/lib/less/utils\";\n\nconst { BASE_URL } = config;\n\nlet tokenInProgress = false;\n// * GET, POST, DELETE, UPDATE\nconst initialToken = localStorage.getItem(\"token\");\nif (initialToken) {\n  axios.defaults.headers.common[\"Authorization\"] = `Bearer ${initialToken}`;\n}\n\nconst checkToken = new Promise((resolve, reject) => {\n  if (localStorage.getItem(\"access_token\")) {\n    axios.defaults.headers.common[\n        \"Authorization\"\n        ] = `Bearer ${localStorage.getItem(\"access_token\")}`;\n    resolve(true);\n  } else {\n    axios.get(`${BASE_URL}/`).then(response => {\n      const { data } = response;\n      if (response.data.success) {\n        localStorage.setItem(\"access_token\", data.data.token);\n        axios.defaults.headers.common[\n            \"Authorization\"\n            ] = `Bearer ${localStorage.getItem(\"access_token\")}`;\n      }\n      resolve(true);\n    });\n  }\n});\n\nconst apiGet = ({ path, params, headers, cb, err }) => {\n  checkToken.then(() => {\n    axios\n        .get(`${BASE_URL}${path}`, { params })\n        .then(response => {\n          if (response.status === 200 && cb) {\n            cb(response)\n          } else {\n            if (err) {\n              err(response.error);\n            }\n          }\n        })\n        .catch(function (error) {\n          if (\n              config.DEV_MODE ||\n              (error && error.response && error.response.status === 404)\n          ) {\n            if (err) {\n              err(error.response);\n            }\n            message.error(\"Connection Error!\");\n            return;\n          }\n          if (error && error.response && error.response.status === 401) {\n            message.warning(\n                \"Unauthorised request! You will be logged out.\"\n            );\n            logout(() => {\n              setTimeout(() => {\n                window.location.reload(true);\n              }, 300);\n            });\n            return;\n          }\n          message.warning(\"Something went wrong!!\");\n        });\n  });\n};\n\nconst apiPost = ({ path, params, headers, cb, err }) => {\n  checkToken.then(() => {\n    axios\n        .post(`${BASE_URL}${path}`, params)\n        .then(function (response) {\n          if (\n              (response.status === 200 || response.status === 201) &&\n              cb\n          ) {\n            cb(response.data);\n          } else {\n            err(response);\n          }\n        })\n        .catch(function (error) {\n          if (config.DEV_MODE || error.response.status === 404) {\n            if (err) {\n              err(error.response);\n              return;\n            }\n            message.warning(\"Something went wrong!!\");\n            return;\n          }\n          if (error && error.response && error.response.status === 401) {\n            message.warning(\n                \"Unauthorised request! You will be logged out.\"\n            );\n            logout(() => {\n              setTimeout(() => {\n                window.location.reload(true);\n              }, 300);\n            });\n            return;\n          }\n          message.warning(\"Something went wrong!!\");\n        });\n  });\n};\n\n\n\nconst apiDelete = ({ path, params, headers, cb, err }) => {\n  checkToken.then(() => {\n    axios\n        .delete(`${BASE_URL}${path}`, params)\n        .then(function (response) {\n          if (response.status === 200 && cb) {\n            cb(response.data);\n          } else {\n            err(response);\n          }\n        })\n        .catch(function (error) {\n          if (err) {\n            err(error.error);\n          }\n        });\n  });\n};\n\nconst apiPut = ({ path, params, headers, cb, err }) => {\n  checkToken.then(() => {\n    axios\n        .put(`${BASE_URL}${path}`, params)\n        .then(function (response) {\n          if (response.status === 200 && cb) {\n            cb(response.data);\n          } else {\n            err(response);\n          }\n        })\n        .catch(function (error) {\n          console.log(error);\n          if (err) {\n            err(error.error);\n          }\n        });\n  });\n};\n\nexport const login = (params, cb, err) => {\n  apiPost({\n    path: \"/auth/local\",\n    params,\n    cb,\n    err\n  });\n};\n\nexport const register = (params, cb, err) => {\n  apiPost({\n    path: \"/auth/local/register\",\n    params,\n    cb,\n    err\n  });\n};\n\nexport const googleLogin = (params, cb, err) => {\n  apiGet({\n    path: `/auth/google/callback${window.location.search}`,\n    params,\n    cb,\n    err\n  });\n};\n\nexport const logout = cb => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"userInfo\");\n  localStorage.removeItem(\"permissions\");\n  cb({ status: 200, message: \"Logged Out!\" });\n};\n\nexport const graphql = (params, cb, err) => {\n  apiPost({\n    path: \"/graphql\",\n    params,\n    cb,\n    err\n  });\n};\n\nexport const updateUser = (id, params, cb, err) => {\n  apiPut({\n    path: \"/users/\" + id,\n    params,\n    cb,\n    err\n  });\n};\n\nexport const getMe = (params, cb, err) => {\n  apiGet({\n    path: \"/users/me\",\n    params,\n    cb,\n    err\n  });\n};\n\nexport const addProject = (params, cb, err) => {\n  apiPost({\n    path: \"/projects\",\n    params,\n    cb,\n    err\n  });\n};\n\nexport const getProjects = (params, cb, err) => {\n  apiGet({\n    path: \"/projects\",\n    params,\n    cb,\n    err\n  });\n};\nexport const projectCount = (params, cb, err) => {\n  apiGet({\n    path: \"/projects/count\",\n    params,\n    cb,\n    err\n  });\n};\nexport const updateProject = (id, params, cb, err) => {\n  apiPut({\n    path: `/projects/${id}`,\n    params,\n    cb,\n    err\n  });\n};\n\nexport const deployProject = (params, cb, err) => {\n  apiPost({\n    path: \"/deploy\",\n    params,\n    cb,\n    err\n  });\n};","import axios from 'axios';\nimport {path} from \"../config\";\nimport {getShop, googleLogin} from \"./ajax\";\n\nexport default (props) => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    const jwt = localStorage.getItem('token');\n    if (!user || !jwt) {\n        window.history.pushState({},'Login','/');\n        props.history.push(path.login);\n        return;\n    }\n    window.history.pushState({},'Dashboard','/');\n    props.history.push(path.dashboard);\n};","import React from 'react';\nimport {Link } from 'react-router-dom';\nimport logo from '../../images/logo.png';\nimport {Card, Row, Col, Select, Table, Drawer, Button, message, Divider} from 'antd'\n\nimport DashboardLayout from \"../../layout/Dashboard/DashboardLayout\";\nimport {getProjects} from \"../../services/ajax\";\nimport checkRedirect from \"../../services/checkRedirect\";\n// import styles from './DashboardStyles.scss'\n\nclass DashboardPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.columns = [\n      {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name',\n        render: (text) => text\n      },\n      {\n        title: 'Last Deployed',\n        dataIndex: 'updated_at',\n        key: 'updated_at',\n        render: (text) =>  `${new Date(text).toDateString()}, ${new Date(text).toLocaleTimeString()}`\n      },\n      {\n        title: 'Status',\n        dataIndex: 'status',\n        key: 'status',\n      },\n      {\n        title: 'Action',\n        key: 'operation',\n        render: (text, record) => <Button onClick={() => { this.showDetails(record)}} >View</Button>,\n      },\n    ];\n\n    this.state = {\n      list: [],\n      unassignedOrders: [],\n      statuses: [],\n      viewDetail: false,\n      loading: true,\n      selectedOrder: {},\n    };\n  }\n\n  componentWillMount() {\n    checkRedirect(this.props);\n    let user = JSON.parse(localStorage.getItem('user'));\n    this.getProjects();\n  }\n  showDetails = (post) => {\n    this.props.history.push(`/project/${post.uID}`)\n  };\n\n  closeViewMode = () => {\n    this.setState({\n      viewDetail: false,\n      selectedOrder: {}\n    })\n  };\n\n  getProjects = () => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    getProjects({_sort: 'id:desc'},\n        resp => {\n          const projects = resp.data;\n          this.setState({\n            viewDetail: false,\n            list: projects,\n          })\n        }\n    );\n  };\n\n  render() {\n    const {list, unassignedOrders, viewDetail, selectedOrder, statuses} = this.state;\n    console.log(list);\n    return (\n        <DashboardLayout {...this.props}>\n\n            {\n              list && list.length > 0 && (\n                  <div className=\"my-dashboard\">\n                    <h1>My Projects</h1>\n\n                    <Table\n                        rowKey={'id'}\n                        columns={this.columns}\n                        pagination={false}\n                        dataSource={list}\n                    />\n\n                    {\n                      viewDetail && (\n                          <Drawer\n                              width={520}\n                              visible={viewDetail}\n                              onClose={this.closeViewMode}\n                          >\n                            {/*<OrderHistoryView post={selectedOrder} />*/}\n                          </Drawer>\n                      )\n                    }\n                  </div>\n              )\n            }\n        </DashboardLayout>\n\n    );\n  }\n\n}\nexport default DashboardPage;\n","import React from 'react';\nimport {Card, Button, Form, Input, message, Layout} from 'antd';\nimport logo from '../../images/logo.png';\nimport checkRedirect from \"../../services/checkRedirect\";\nimport {login} from \"../../services/ajax\";\n\nconst { Footer } = Layout;\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\n\nclass LoginPageForm extends React.Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false\n    }\n  }\n\n  componentWillMount() {\n    checkRedirect(this.props);\n  }\n\n  handleLogin = (ev) => {\n    ev.preventDefault();\n    this.setState({\n      confirmLoading: true,\n      record: null\n    });\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        login(\n            values,\n            response => {\n              let user = response.user;\n              localStorage.setItem('user', JSON.stringify(response.user));\n              localStorage.setItem('token', response.jwt);\n              message.success(\"Login success! You will be redirected shortly.\",1, this.redirect);\n            },\n            error => {\n              message.error(\"Error occurred!\");\n              this.props.form.resetFields();\n              this.setState({\n                visible: false,\n                confirmLoading: false\n              });\n            }\n        );\n      } else {\n        this.setState({\n          confirmLoading: false\n        });\n      }\n    });\n  };\n\n  redirect = () => {\n    window.location.reload(true);\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n        <main className={'auth'}>\n\n          <div className={'logo'}>\n            <img src={logo} alt={'logo'}/>\n          </div>\n\n\n          <div className={'login'}>\n            <Card bordered={false}>\n              <div className={'title'}>JANTA SAMAN</div>\n              <p className={'sub-title'}>Please log in to continue!</p>\n\n              <Form\n                  {...layout}\n                  name=\"basic\"\n                  onSubmit={this.handleLogin}\n              >\n                <Form.Item\n                    label=\"Username\"\n                >\n                  {getFieldDecorator(\"identifier\", {\n                    initialValue: \"\",\n                    rules: [{ required: true, message: 'Please input your username!' }]\n                  })(<Input />)}\n                </Form.Item>\n                <Form.Item\n                    label=\"Password\"\n                    rules={[{ required: true, message: 'Please input your password!' }]}\n                >\n                  {getFieldDecorator(\"password\", {\n                    initialValue: \"\",\n                    rules: [{ required: true, message: 'Please input your password!' }]\n                  })(<Input.Password />)}\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                  <Button block type={'primary'} size={'large'} shape={'round'} htmlType=\"submit\">\n                    Login\n                  </Button>\n                </Form.Item>\n              </Form>\n              <p align={'center'}>OR</p>\n              <Button block type={'primary'} size={'large'} shape={'round'} onClick={() => this.props.history.push('/register')}>\n                Register\n              </Button>\n            </Card>\n          </div>\n          <Footer>\n            Developed by\n            <Button type=\"link\" href=\"www.craffcodes.com\" block target=\"_blank\">\n              Craffcodes\n            </Button>\n          </Footer>\n        </main>\n    )\n  }\n}\nconst LoginPage = Form.create({ name: \"login\" })(\n    LoginPageForm\n);\nexport default LoginPage;\n","import React from 'react';\nimport {Link } from 'react-router-dom';\nimport logo from '../../images/logo.png';\nimport { Form, Card, Row, Col, Select, Input, Button, message } from 'antd'\n\nimport DashboardLayout from \"../../layout/Dashboard/DashboardLayout\";\nimport {addProject, getMe, graphql, updateProject, updateUser} from \"../../services/ajax\";\nimport queries from \"../../queries\";\nimport checkRedirect from \"../../services/checkRedirect\";\nimport TextArea from \"antd/es/input/TextArea\";\n\n\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\n\nclass AddProjectForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      locations: [],\n      project: null,\n    }\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n      const oldProject = this.state.project;\n      const { project } = nextProps;\n      if (oldProject === project) {\n          return;\n      }\n      if (project) {\n          this.setState({\n              project: project\n          })\n          this.populateDetails(project);\n      }\n  }\n\n  populateDetails = (project) => {\n      this.props.form.setFieldsValue({\n          name: project && project.name,\n          user: project && project.user,\n          chownUser: project && project.chownUser,\n          host: project && project.host,\n          // password: project && project.password,\n          repositoryUrl: project && project.repositoryUrl,\n          deployPath: project && project.deployPath,\n          sshKey: project && project.sshKey,\n          buildCommands: project && project.buildCommands,\n          branch: project && project.branch,\n          port: project && project.port,\n      })\n  };\n\n  handleAddProject = (ev) => {\n   const { project } = this.state;\n    ev.preventDefault();\n    this.setState({\n      confirmLoading: true,\n      record: null\n    });\n\n    if (project) {\n        this.updateProject();\n    } else {\n        let user = JSON.parse(localStorage.getItem('user'));\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                values.owner = user.id;\n                addProject(\n                  values,\n                  response => {\n                    this.updateUser(response);\n                  },\n                  error => {\n                    message.error(\"Error adding Project\");\n                    this.props.form.resetFields();\n                    this.setState({\n                      visible: false,\n                      confirmLoading: false\n                    });\n                  }\n                );\n            } else {\n                this.setState({\n                    confirmLoading: false\n                });\n            }\n        });\n    }\n  };\n\n  updateUser = (response) => {\n      const { project } = this.state;\n      this.props.form.validateFieldsAndScroll((err, values) => {\n          if (!err) {\n              updateProject(\n                project.id,\n                values,\n                response => {\n                  this.updateUser(response);\n                },\n                error => {\n                  message.error(\"Error adding Project\");\n                  this.props.form.resetFields();\n                  this.setState({\n                    visible: false,\n                    confirmLoading: false\n                  });\n                }\n              );\n          } else {\n              this.setState({\n                  confirmLoading: false\n              });\n          }\n      });\n  };\n\n  projectAdded = (user) => {\n      this.props.history.push('/');\n      window.location.reload();\n      // this.props.projectAdded(user);\n  };\n\n  render() {\n    const { locations, project } = this.state;\n    const { getFieldDecorator } = this.props.form;\n    return (\n        <Form\n            {...layout}\n            name=\"basic\"\n            onSubmit={this.handleAddProject}\n        >\n\n            <Col sm={24} lg={12}>\n                <Form.Item\n                    label=\"Project Name\"\n                >\n                    {getFieldDecorator(\"name\", {\n                        initialValue: \"\",\n                        rules: [{ required: true, message: 'Please input your project name!' }]\n                    })(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"SSH User\">\n                    {getFieldDecorator(\"user\", {\n                        initialValue: \"\",\n                        rules: [{ required: true, message: 'User is required!' }]\n                    })(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"Password (Leave blank if you do not wish to update)\">\n                    {getFieldDecorator(\"password\", {\n                        initialValue: \"\",\n                        rules: []\n                    })(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"Chown User (Add if additional permissions required after deployment)\">\n                    {getFieldDecorator(\"chownUser\", {\n                        initialValue: \"\",\n                        rules: []\n                    })(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"Deploy Path\">\n                    {getFieldDecorator(\"deployPath\", {\n                        initialValue: \"\",\n                        rules: [{ required: true, message: 'Port is required!' }]\n                    })(<Input />)}\n                </Form.Item>\n            </Col>\n            <Col sm={12} lg={12}>\n\n                <Form.Item label=\"Host\">\n                    {getFieldDecorator(\"host\", {\n                        initialValue: \"\",\n                        rules: [{ required: true, message: 'Host is required!' }]\n                    })(<Input />)}\n                </Form.Item>\n                <Form.Item label=\"Port\">\n                    {getFieldDecorator(\"port\", {\n                        initialValue: \"\",\n                        rules: [{ required: true, message: 'Port is required!' }]\n                    })(<Input />)}\n                </Form.Item>\n                <Form.Item\n                    label=\"Repository Url\"\n                >\n                    {getFieldDecorator(\"repositoryUrl\", {\n                        initialValue: \"\",\n                        rules: []\n                    })(\n                        <TextArea rows={2}/>\n                    )}\n                </Form.Item>\n                <Form.Item label=\"Branch\">\n                    {getFieldDecorator(\"branch\", {\n                        initialValue: \"\",\n                        rules: [{ required: true, message: 'Port is required!' }]\n                    })(<Input />)}\n                </Form.Item>\n            </Col>\n            <Col lg={18}>\n                <Form.Item\n                    label=\"SSH Key\"\n                >\n                    {getFieldDecorator(\"sshKey\", {\n                        initialValue: \"\",\n                        rules: []\n                    })(\n                        <TextArea rows={4}/>\n                    )}\n                </Form.Item>\n                <Form.Item\n                    label=\"Build commands(Each command on new line)\"\n                >\n                    {getFieldDecorator(\"buildCommands\", {\n                        initialValue: \"\",\n                        rules: []\n                    })(\n                        <TextArea rows={2}/>\n                    )}\n                </Form.Item>\n            </Col>\n          <Form.Item {...tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Save\n            </Button>\n          </Form.Item>\n        </Form>\n    );\n  }\n\n}\n\n\nconst AddProject = Form.create({ name: \"add_project\" })(\n    AddProjectForm\n);\nexport default AddProject;\n","import React from 'react';\nimport {Link } from 'react-router-dom';\nimport logo from '../../images/logo.png';\nimport {Form, Card, Row, Col, Select, Input, Button, message, Divider} from 'antd'\n\nimport DashboardLayout from \"../../layout/Dashboard/DashboardLayout\";\nimport {addProject, getProjects, graphql} from \"../../services/ajax\";\nimport queries from \"../../queries\";\nimport AddProject from \"./AddProject\";\nimport checkRedirect from \"../../services/checkRedirect\";\n\n\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\n\nclass ProjectDetail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      createProject: false,\n      editProject: false,\n      viewProject: false,\n      locations: [],\n      project: null\n    }\n  }\n\n  componentWillMount() {\n    let user = JSON.parse(localStorage.getItem('user'));\n    const { uID } = this.props.match.params;\n    getProjects({uID}, (response) => {\n      this.setState({\n        viewProject: true,\n        project: response.data[0],\n        createProject: false,\n      });\n    })\n  }\n\n  projectAdded = () => {\n\n  };\n\n  deployProject = () => {\n    const {uID} = this.props.match.params;\n    this.props.history.push(`/project/${uID}/deploy`);\n  };\n\n  render() {\n    const { project } = this.state;\n    return (\n        <DashboardLayout {...this.props}>\n          <div className=\"my-project\">\n            <h1>{project && project.name}</h1>\n            <div className=\"vendor-filters\">\n              Last deployed: {project && new Date(project.updated_at).toDateString()} <Button type=\"primary\" onClick={this.deployProject}>Deploy</Button>\n            </div>\n            <Divider/>\n            <h1>Details</h1>\n            <div className=\"vendor-filters\">\n              <Row gutter={34}>\n                <AddProject projectAdded={this.projectAdded} project={project} {...this.props}/>\n              </Row>\n            </div>\n          </div>\n        </DashboardLayout>\n\n    );\n  }\n\n}\nexport default ProjectDetail;\n","import React from 'react';\nimport {Button, message, Divider, Timeline} from 'antd'\nimport DashboardLayout from \"../../layout/Dashboard/DashboardLayout\";\nimport {deployProject, getProjects} from \"../../services/ajax\";\nimport {APP_URL, BASE_URL, SOCKET_PORT} from \"../../config\";\n\n\nlet token = localStorage.getItem('token');\nconst SocketIOClient = require('socket.io-client');\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\n\nclass ProjectDetail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showStatus: false,\n      deploying: false,\n      project: null,\n      deployed: false,\n      logs: []\n    };\n    this.socket = SocketIOClient(`${BASE_URL}:${SOCKET_PORT}`, {\n      transports: ['websocket'],\n      reconnection: true,\n      upgrade: false,\n    });\n    this.audio = new Audio(`${APP_URL}/media/just-saying.mp3`);\n  }\n\n  componentDidMount() {\n    const { uID } = this.props.match.params;\n    const { logs }= this.state;\n    if (logs.length > 0) {\n      this.setState({\n        deploying: true\n      })\n    }\n    this.socket.on('connect', () => {\n      console.log('Connected!');\n    });\n    this.socket.emit('join', {uID: uID});\n    this.socket.on('message', this.handleData);\n  }\n\n  componentWillMount() {\n    let user = JSON.parse(localStorage.getItem('user'));\n    // socket.on(\"connected\", (data) => console.log(data))\n    const { uID } = this.props.match.params;\n    getProjects({uID}, (response) => {\n      this.setState({\n        viewProject: true,\n        project: response.data[0],\n        createProject: false,\n      });\n    });\n  }\n  componentWillUnmount() {\n    // this.socket.removeListener('message', this.handleData);\n  }\n\n  handleData = (mess) => {\n    console.log(mess);\n    if (!mess) return;\n    if (mess.code === 'deployment_complete') {\n      this.audio.play();\n      message.success('Deployment complete!');\n      this.setState({\n        deploying: false,\n        deployed: true,\n        logs: [...this.state.logs, mess.message]\n      }, (err) => {\n        console.log(err);\n        this.setState({\n          deploying: false,\n          deployed: true,\n        })\n      });\n    } else if(mess.code === 'error') {\n      this.setState({\n        logs: [...this.state.logs, mess.message],\n        showStatus: true,\n        deploying: false,\n        deployed: true\n      })\n    } else {\n      this.setState({\n        logs: [...this.state.logs, mess.message],\n        showStatus: true,\n        deploying: true\n      })\n    }\n  };\n\n  deployProject = () => {\n    const {uID} = this.props.match.params;\n\n    this.setState({\n      deploying: true,\n      showStatus: true,\n      logs: []\n    });\n    deployProject({projectID: uID}, (response) => {},(error) => {\n      this.setState({\n        deploying: false,\n        deployed: true,\n      })\n    })\n  };\n\n  render() {\n    const { project, deploying, logs, showStatus, deployed } = this.state;\n    return (\n        <DashboardLayout {...this.props}>\n          <div className=\"my-project\">\n            <h1>{project && project.name}</h1>\n            <div className=\"vendor-filters\">\n              Last deployed: {project && new Date(project.updated_at).toDateString()} {!deployed && (<Button type=\"primary\" onClick={this.deployProject} loading={this.state.deploying}>Deploy now  </Button>)} {deployed && (<Button type=\"primary\" onClick={() => window.location.reload() } >Deploy again  </Button>)}\n            </div>\n            <Divider/>\n            {\n              showStatus && (\n                  <>\n                    <h1>Deployment Status</h1>\n                    <Timeline>\n                      {\n                        logs && logs.map((log, index) => {\n                          return <Timeline.Item key={index}>{log}</Timeline.Item>\n                        })\n                      }\n                    </Timeline>\n                  </>\n              )\n            }\n\n          </div>\n        </DashboardLayout>\n\n    );\n  }\n\n}\nexport default ProjectDetail;\n","import React from 'react';\nimport {Card, Button, Form, Input, message} from 'antd';\nimport logo from '../../images/logo.png';\nimport checkRedirect from \"../../services/checkRedirect\";\nimport {BASE_URL} from \"../../config\";\nimport {addShop, getShop, login, register} from \"../../services/ajax\";\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\n\nconst phoneRules = [{\n  required: true,\n  message: 'Please input Mobile Number!'\n},{\n  pattern: /^([789])[0-9]{9}$/,\n  message: 'Please enter valid 10 digit Indian Phone Number!'\n}];\n\nclass RegisterPageForm extends React.Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false\n    }\n  }\n\n  componentWillMount() {\n    checkRedirect(this.props);\n  }\n\n  handleLogin = (ev) => {\n    ev.preventDefault();\n    this.setState({\n      confirmLoading: true,\n      record: null\n    });\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        values.confirmed = false;\n        values.username = values.email.match(/^([^@]*)@/)[1];\n\n        register(\n              values,\n              response => {\n                message.success(\"Register success! You will be notified by email or phone once confirmed.\",10, this.redirect);\n              },\n              error => {\n                if (error.data.message) {\n                  console.log(error.data.message);\n                  for (let i in error.data.message) {\n                    let messages = error.data.message[i];\n                    for (let j in messages) {\n                      let mess = messages[j];\n                      for (let k in mess) {\n                        message.error(mess[k].message)\n                      }\n                    }\n                  }\n                } else {\n                  message.error(\"Error occurred!\");\n                }\n                this.setState({\n                  visible: false,\n                  confirmLoading: false\n                });\n              }\n        );\n      } else {\n        this.setState({\n          confirmLoading: false\n        });\n      }\n    });\n  };\n\n  redirect = () => {\n    window.location.reload(true);\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n        <main className={'auth'}>\n\n          <div className={'logo'}>\n            <img src={logo} alt={'logo'}/>\n          </div>\n\n\n          <div className={'login'}>\n            <Card bordered={false}>\n              <div className={'title'}>JANTA SAMAN</div>\n              <p className={'sub-title'}>Register Here!</p>\n\n              <Form\n                  {...layout}\n                  name=\"basic\"\n                  onSubmit={this.handleLogin}\n              >\n                <Form.Item\n                    label=\"First Name\"\n                >\n                  {getFieldDecorator(\"firstName\", {\n                    initialValue: \"\",\n                    rules: [{ required: true, message: 'Please input your first name!' }]\n                  })(<Input />)}\n                </Form.Item>\n                <Form.Item\n                    label=\"Last Name\"\n                >\n                  {getFieldDecorator(\"lastName\", {\n                    initialValue: \"\",\n                    rules: [{ required: true, message: 'Please input your first name!' }]\n                  })(<Input />)}\n                </Form.Item>\n                <Form.Item label={'Email'} colon={false}>\n                  {\n                    getFieldDecorator('email', {\n                      rules: [{\n                        required: true,\n                        message: 'Please input Email ID!'\n                      }]\n                    })(<Input size={'large'} type={'email'} />)\n                  }\n                </Form.Item>\n                <Form.Item label={'Phone'} colon={false}>\n                  {\n                    getFieldDecorator('phone', {\n                      rules: phoneRules\n                    })(<Input size={'large'} type={'text'}/>)\n                  }\n                </Form.Item>\n                <Form.Item\n                    label=\"Password\"\n                    rules={[{ required: true, message: 'Please input your password!' }]}\n                >\n                  {getFieldDecorator(\"password\", {\n                    initialValue: \"\",\n                    rules: [{ required: true, message: 'Please input your password!' }]\n                  })(<Input.Password />)}\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                  <Button block type={'primary'} size={'large'} shape={'round'} htmlType=\"submit\">\n                    Register\n                  </Button>\n                </Form.Item>\n              </Form>\n              <p align={'center'}>OR</p>\n              <Button block type={'primary'} size={'large'} shape={'round'} onClick={() => this.props.history.push('/login')}>\n                Login\n              </Button>\n            </Card>\n          </div>\n        </main>\n    )\n  }\n}\nconst RegisterPage = Form.create({ name: \"register\" })(\n    RegisterPageForm\n);\nexport default RegisterPage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter, Redirect, Route, Switch} from 'react-router-dom';\nimport './index.scss';\nimport DashboardPage from './pages/Dashboard/DashboardPage';\nimport LoginPage from './pages/Login/LoginPage';\n\nimport { path } from './config';\n\nimport ProjectDetail from \"./pages/Project/ProjectDetail\";\nimport Deploy from \"./pages/Project/Deploy\";\nimport RegisterPage from \"./pages/Login/RegisterPage\";\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n  const loginToken = localStorage.getItem('token');\n  return (\n    <Route\n      {...rest}\n      render={ props => (\n        loginToken ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={path.login}/>\n        )\n      )\n      }\n    />\n  );\n};\n\nconst App = () => (\n  <HashRouter>\n    <Switch>\n      <PrivateRoute exact path={path.dashboard} component={DashboardPage}/>\n      <Route exact path={path.login} component={LoginPage}/>\n      <Route exact path={path.register} component={RegisterPage}/>\n      <Route exact path={path.projectDetail} component={ProjectDetail}/>\n      <Route exact path={path.deployProject} component={Deploy}/>\n    </Switch>\n  </HashRouter>\n\n);\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/logo.4e2b85f3.png\";"],"sourceRoot":""}